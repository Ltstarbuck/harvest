[{"function": "buy(self, symbol, quantity, in_force, extended)", "index": "buy", "short_description": "Buys the specified asset.", "long_description": "When called, Harvests places a limit order with a limit\nprice 5% higher than the current price.", "params": [{"name": "symbol", "type": "str", "desc": "Symbol of the asset to buy. ", "default": "first symbol in watch", "optional": true}, {"name": "quantity", "type": "float", "desc": "Quantity of asset to buy. ", "default": "1", "optional": true}, {"name": "in_force", "type": "str", "desc": "Duration the order is in force. '{gtc}' or '{gtd}'. ", "default": "'gtc'", "optional": true}, {"name": "extended", "type": "str", "desc": "Whether to trade in extended hours or not. ", "default": "False", "optional": true}], "returns": "The following Python dictionary\n- type: 'STOCK' or 'CRYPTO'\n- id: ID of order\n- symbol: symbol of asset", "raises": [{"type": "Exception", "desc": "There is an error in the order process."}]}, {"function": "buy_option(self, symbol, quantity, in_force)", "index": "buy_option", "short_description": "Buys the specified option.", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Symbol of the asset to buy, in OCC format", "default": null, "optional": null}, {"name": "quantity", "type": null, "desc": "Quantity of asset to bu", "default": null, "optional": null}, {"name": "in_force", "type": null, "desc": "Duration the order is in forc", "default": null, "optional": null}], "returns": "A dictionary with the following keys:\n- type: 'OPTION'\n- id: ID of order\n- symbol: symbol of asset\nRaises an exception if order fails.", "raises": []}, {"function": "sell(self, symbol, quantity, in_force, extended)", "index": "sell", "short_description": "Sells the specified asset.", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Symbol of the asset to sel", "default": null, "optional": null}, {"name": "quantity", "type": null, "desc": "Quantity of asset to sel", "default": null, "optional": null}, {"name": "in_force", "type": null, "desc": "Duration the order is in forc", "default": null, "optional": null}, {"name": "extended", "type": null, "desc": "Whether to trade in extended hours or not", "default": null, "optional": null}], "returns": "A dictionary with the following keys:\n    - type: 'STOCK' or 'CRYPTO'\n    - id: ID of order\n    - symbol: symbol of asset\n\nRaises an exception if order fails.", "raises": []}, {"function": "sell_option(self, symbol, quantity, in_force)", "index": "sell_option", "short_description": "Sells the specified option.", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Symbol of the asset to buy, in OCC format", "default": null, "optional": null}, {"name": "quantity", "type": null, "desc": "Quantity of asset to bu", "default": null, "optional": null}, {"name": "in_force", "type": null, "desc": "Duration the order is in forc", "default": null, "optional": null}], "returns": "A dictionary with the following keys:\n- type: 'OPTION'\n- id: ID of order\n- symbol: symbol of asset\nRaises an exception if order fails.", "raises": []}, {"function": "await_buy(self, symbol, quantity, in_force, extended)", "index": "await_buy", "short_description": "Buys the specified asset, and hangs the code until the order is filled. ", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Symbol of the asset to bu", "default": null, "optional": null}, {"name": "quantity", "type": null, "desc": "Quantity of asset to bu", "default": null, "optional": null}, {"name": "in_force", "type": null, "desc": "Duration the order is in forc", "default": null, "optional": null}, {"name": "extended", "type": null, "desc": "Whether to trade in extended hours or not", "default": null, "optional": null}], "returns": "A dictionary with the following keys:\n- type: 'STOCK' or 'CRYPTO'\n- id: ID of order\n- symbol: symbol of asset\nRaises an exception if order fails.", "raises": []}, {"function": "await_sell(self, symbol, quantity, in_force, extended)", "index": "await_sell", "short_description": "Sells the specified asset, and hangs the code until the order is filled. ", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Symbol of the asset to bu", "default": null, "optional": null}, {"name": "quantity", "type": null, "desc": "Quantity of asset to bu", "default": null, "optional": null}, {"name": "in_force", "type": null, "desc": "Duration the order is in forc", "default": null, "optional": null}, {"name": "extended", "type": null, "desc": "Whether to trade in extended hours or not", "default": null, "optional": null}], "returns": "A dictionary with the following keys:\n- type: 'STOCK' or 'CRYPTO'\n- id: ID of order\n- symbol: symbol of asset\nRaises an exception if order fails.", "raises": []}, {"function": "get_option_market_data(self, symbol)", "index": "get_option_market_data", "short_description": "Retrieves data of specified option. ", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Occ symbol of optio", "default": null, "optional": null}], "returns": "A dictionary:\n- price: price of option \n- ask: ask price\n- bid: bid price\n}", "raises": []}, {"function": "get_chain_data(self, symbol)", "index": "get_chain_data", "short_description": "Returns the option chain for the specified symbol. ", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "symbol of stoc", "default": null, "optional": null}], "returns": "A dataframe in the following format:\n            exp_date strike  type    id\n    OCC\n    ---     ---      ---     ---     ---     \n- OCC: the chain symbol in OCC format", "raises": []}, {"function": "get_chain_info(self, symbol)", "index": "get_chain_info", "short_description": "Returns information about the symbol's options", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "symbol of stoc", "default": null, "optional": null}], "returns": "A dict with the following keys:\n- id: ID of the option chain \n- exp_dates: List of expiration dates, in the fomrat \"YYYY-MM-DD\" \n- multiplier: Multiplier of the option, usually 100", "raises": []}, {"function": "ema(self, symbol, period, interval, ref)", "index": "ema", "short_description": "Calculate EMA", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Symbol to perform calculation o", "default": null, "optional": null}, {"name": "period", "type": null, "desc": "Period of EM", "default": null, "optional": null}, {"name": "interval", "type": null, "desc": "Interval to perform the calculatio", "default": null, "optional": null}, {"name": "ref", "type": null, "desc": "'close', 'open', 'high', or 'low", "default": null, "optional": null}], "returns": "A list in numpy format, containing EMA values", "raises": []}, {"function": "rsi(self, symbol, period, interval, ref)", "index": "rsi", "short_description": "Calculate RSI", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Symbol to perform calculation o", "default": null, "optional": null}, {"name": "period", "type": null, "desc": "Period of RS", "default": null, "optional": null}, {"name": "interval", "type": null, "desc": "Interval to perform the calculatio", "default": null, "optional": null}, {"name": "ref", "type": null, "desc": "'close', 'open', 'high', or 'low", "default": null, "optional": null}], "returns": "A list in numpy format, containing RSI values", "raises": []}, {"function": "sma(self, symbol, period, interval, ref)", "index": "sma", "short_description": "Calculate SMA", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Symbol to perform calculation o", "default": null, "optional": null}, {"name": "period", "type": null, "desc": "Period of SM", "default": null, "optional": null}, {"name": "interval", "type": null, "desc": "Interval to perform the calculatio", "default": null, "optional": null}, {"name": "ref", "type": null, "desc": "'close', 'open', 'high', or 'low", "default": null, "optional": null}], "returns": "A list in numpy format, containing SMA values", "raises": []}, {"function": "bbands(self, symbol, period, interval, ref, dev)", "index": "bbands", "short_description": "Calculate Bollinger Bands", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Symbol to perform calculation o", "default": null, "optional": null}, {"name": "period", "type": null, "desc": "Period of BBan", "default": null, "optional": null}, {"name": "interval", "type": null, "desc": "Interval to perform the calculatio", "default": null, "optional": null}, {"name": "ref", "type": null, "desc": "'close', 'open', 'high', or 'low", "default": null, "optional": null}, {"name": "dev", "type": null, "desc": "Standard deviation of the band", "default": null, "optional": null}], "returns": "A tuple of numpy lists, each a list of BBand top, average, and bottom values", "raises": []}, {"function": "bbands_raw(self, arr, symbol, period, interval, ref, dev)", "index": "bbands_raw", "short_description": "Calculate Bollinger Bands using given data", "long_description": null, "params": [{"name": "arr", "type": null, "desc": "List of prices as float to use in calculation of bollinger ban", "default": null, "optional": null}, {"name": "symbol", "type": null, "desc": "Symbol to perform calculation o", "default": null, "optional": null}, {"name": "period", "type": null, "desc": "Period of BBan", "default": null, "optional": null}, {"name": "interval", "type": null, "desc": "Interval to perform the calculatio", "default": null, "optional": null}, {"name": "ref", "type": null, "desc": "'close', 'open', 'high', or 'low", "default": null, "optional": null}, {"name": "dev", "type": null, "desc": "Standard deviation of the band", "default": null, "optional": null}], "returns": "A tuple of numpy lists, each a list of BBand top, average, and bottom values", "raises": []}, {"function": "get_account_buying_power(self)", "index": "get_account_buying_power", "short_description": null, "long_description": null, "params": [], "returns": "", "raises": []}, {"function": "get_account_equity(self)", "index": "get_account_equity", "short_description": null, "long_description": null, "params": [], "returns": "", "raises": []}, {"function": "get_candle(self)", "index": "get_candle", "short_description": null, "long_description": null, "params": [], "returns": "", "raises": []}, {"function": "get_candle_list(self)", "index": "get_candle_list", "short_description": null, "long_description": null, "params": [], "returns": "", "raises": []}, {"function": "get_cost(self, symbol)", "index": "get_cost", "short_description": "Returns the average cost of a specified asset. ", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Symbol of asse", "default": null, "optional": null}], "returns": "Average cost of asset. Returns None if asset is not being tracked.", "raises": []}, {"function": "get_date(self)", "index": "get_date", "short_description": null, "long_description": null, "params": [], "returns": "", "raises": []}, {"function": "get_datetime(self)", "index": "get_datetime", "short_description": null, "long_description": null, "params": [], "returns": "", "raises": []}, {"function": "get_price(self)", "index": "get_price", "short_description": null, "long_description": null, "params": [], "returns": "", "raises": []}, {"function": "get_price_list(self, symbol, interval)", "index": "get_price_list", "short_description": "Returns a list of recent prices for an asset. ", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Symbol of asset", "default": null, "optional": null}, {"name": "interval", "type": null, "desc": "Interval of data", "default": null, "optional": null}], "returns": "Average cost of asset. Returns None if asset is not being tracked.", "raises": []}, {"function": "get_quantity(self, symbol)", "index": "get_quantity", "short_description": "Returns the quantity owned of a specified asset. ", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Symbol of asse", "default": null, "optional": null}], "returns": "Quantity of asset. 0 if asset is not owned.", "raises": []}, {"function": "get_returns(self, symbol)", "index": "get_returns", "short_description": "Returns the return of a specified asset. ", "long_description": null, "params": [{"name": "symbol", "type": null, "desc": "Symbol of stock, crypto, or option. Options should be in OCC format", "default": null, "optional": null}], "returns": "Return of asset, expressed as a decimal. Returns None if asset is not owned.", "raises": []}, {"function": "get_time(self)", "index": "get_time", "short_description": null, "long_description": null, "params": [], "returns": "", "raises": []}, {"function": "get_watch(self)", "index": "get_watch", "short_description": null, "long_description": null, "params": [], "returns": "", "raises": []}]